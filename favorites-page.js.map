{"version":3,"file":"favorites-page.js","sources":["../src/js/renderers/pagination.js","../src/js/pages/favorites.js"],"sourcesContent":["import { getIconPath } from '../utils/get-icon-path';\n\nconst MAX_PAGES = 3;\n\nfunction renderEllipsis() {\n  return `<span class=\"pagination-ellipsis\">...</span>`;\n}\n\nfunction renderPageButton(page, currentPage) {\n  return `<button class=\"page-button ${\n    page === currentPage ? 'active' : ''\n  }\" data-page=\"${page}\">${page}</button>`;\n}\n\nfunction renderArrowButton(direction, double, page, disabled) {\n  return `<button class=\"page-button arrow ${\n    disabled ? 'disabled' : ''\n  }\" data-page=\"${page}\">\n    <svg class=\"pagination-arrow-icon ${double ? 'double' : ''}\">\n      <use href=\"${getIconPath(\n        `pagination-arrow${double ? '-double' : ''}-${direction}-icon`\n      )}\"></use>\n    </svg>\n  </button>`;\n}\n\nexport function renderPagination(currentPage, totalPages, onPageChange) {\n  let paginationContainer = document.querySelector('.pagination');\n\n  if (!paginationContainer) {\n    paginationContainer = document.createElement('div');\n    paginationContainer.className = 'pagination';\n    document.querySelector('.exercises-list').appendChild(paginationContainer);\n  } else {\n    paginationContainer.innerHTML = ''; // Clear previous pagination\n  }\n\n  let paginationHTML = '';\n\n  const startPage = Math.max(1, currentPage - Math.floor(MAX_PAGES / 2));\n  const endPage = Math.min(totalPages, startPage + MAX_PAGES - 1);\n  const adjustedStartPage = Math.max(1, endPage - MAX_PAGES + 1);\n\n  const exceedsMaxPages = totalPages > MAX_PAGES;\n\n  if (exceedsMaxPages) {\n    const prevDisabled = currentPage === 1;\n\n    paginationHTML += `\n      <div class=\"arrow-buttons\">\n        ${renderArrowButton('left', true, 1, prevDisabled)}\n        ${renderArrowButton('left', false, currentPage - 1, prevDisabled)}\n      </div>\n    `;\n  }\n\n  let pageButtonsHTML = '';\n  for (let page = adjustedStartPage; page <= endPage; page += 1) {\n    pageButtonsHTML += renderPageButton(page, currentPage);\n  }\n\n  const shouldAddStartEllipsis = adjustedStartPage > 1;\n  const shouldAddEndEllipsis = endPage < totalPages;\n\n  if (shouldAddStartEllipsis) {\n    pageButtonsHTML = `${renderEllipsis()}${pageButtonsHTML}`;\n  }\n  if (shouldAddEndEllipsis) {\n    pageButtonsHTML += renderEllipsis();\n  }\n\n  paginationHTML += `<div class=\"page-buttons\">${pageButtonsHTML}</div>`;\n\n  if (exceedsMaxPages) {\n    const nextDisabled = currentPage === totalPages;\n\n    paginationHTML += `\n      <div class=\"arrow-buttons\">\n        ${renderArrowButton('right', false, currentPage + 1, nextDisabled)}\n        ${renderArrowButton('right', true, totalPages, nextDisabled)}\n      </div>\n    `;\n  }\n\n  paginationContainer.insertAdjacentHTML('beforeend', paginationHTML);\n\n  paginationContainer.onclick = e => {\n    const target =\n      e.target.nodeName === 'BUTTON'\n        ? e.target\n        : e.target.closest('.pagination button');\n\n    if (target) {\n      const page = parseInt(target.dataset.page, 10);\n\n      if (page !== currentPage) {\n        onPageChange(page);\n      }\n    }\n  };\n}\n","import { EXERCISES_PAGE_SIZE } from '../constants';\nimport { renderExercisesList } from '../renderers/exercises-list';\nimport { renderPagination } from '../renderers/pagination';\nimport { getStoredExercises } from '../services/storage';\nimport { loadHeader } from '../services/header.js';\n\nlet page = 1;\nlet favorites = getStoredExercises();\n\nfunction handlePageChange(newPage) {\n  page = newPage;\n  renderFavoritesList();\n}\n\nfunction handleFavoriteDelete(exerciseId) {\n  favorites = favorites.filter(exercise => exercise._id !== exerciseId);\n  renderFavoritesList();\n}\n\nfunction renderFavoritesList() {\n  const totalPages = Math.ceil(favorites.length / EXERCISES_PAGE_SIZE);\n\n  if (page > totalPages) {\n    // if the page exceeds the total pages, reset to the last page\n    // if totalPages is 0, set page to 1\n    page = totalPages || 1;\n  }\n\n  const start = (page - 1) * EXERCISES_PAGE_SIZE;\n  const end = page * EXERCISES_PAGE_SIZE;\n\n  const exercisesToRender = favorites.slice(start, end);\n\n  renderExercisesList(\n    exercisesToRender,\n    \"It appears that you haven't added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future.\",\n    { favorites: true, onFavoriteDelete: handleFavoriteDelete }\n  );\n\n  if (totalPages > 1) {\n    renderPagination(page, totalPages, handlePageChange);\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  renderFavoritesList();\n\n  loadHeader();\n});\n"],"names":["MAX_PAGES","renderEllipsis","renderPageButton","page","currentPage","renderArrowButton","direction","double","disabled","getIconPath","renderPagination","totalPages","onPageChange","paginationContainer","paginationHTML","startPage","endPage","adjustedStartPage","exceedsMaxPages","prevDisabled","pageButtonsHTML","shouldAddStartEllipsis","shouldAddEndEllipsis","nextDisabled","e","target","favorites","getStoredExercises","handlePageChange","newPage","renderFavoritesList","handleFavoriteDelete","exerciseId","exercise","EXERCISES_PAGE_SIZE","start","end","exercisesToRender","renderExercisesList","loadHeader"],"mappings":"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"}