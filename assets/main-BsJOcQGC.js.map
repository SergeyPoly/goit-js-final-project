{"version":3,"file":"main-BsJOcQGC.js","sources":["../../src/js/renders.js","../../src/js/izitoast.js","../../src/js/api.js","../../src/js/render-quote.js","../../src/main.js"],"sourcesContent":["export function toggleHideDOMElement(element) {\n  element.classList.toggle('visually-hidden');\n}","import iziToast from 'izitoast';\n\nfunction showMessage(message, isError) {\n  iziToast.show({\n    icon: isError ? 'fa-solid fa-circle-exclamation' : 'fa-solid fa-check',\n    iconColor: 'white',\n    message,\n    messageColor: 'white',\n    position: 'topRight',\n    timeout: 4000,\n    color: isError ? '#EF4040' : '#00BFFF',\n    maxWidth: '500px',\n  });\n}\n\nexport function showSuccessMessage(message) {\n  showMessage(message, false);\n}\n\nexport function showErrorMessage(message) {\n  showMessage(message, true);\n}\n","import axios from 'axios';\n\nimport { showErrorMessage, showSuccessMessage } from './izitoast.js';\n\naxios.defaults.baseURL = 'https://your-energy.b.goit.study/api';\n\nfunction handleApiError(e) {\n  showErrorMessage(\n    e.response?.data?.message ||\n      `An error occurred: ${e.message}, please try again later!`\n  );\n}\n\nasync function makeRequest(method, ...args) {\n  try {\n    const { data } = await axios[method](...args);\n    return data;\n  } catch (e) {\n    handleApiError(e);\n    return null;\n  }\n}\n\nexport function getQuote() {\n  return makeRequest('get', '/quote');\n}\n\nexport function getFilters(filter, page = 1, limit = 12) {\n  const params = {\n    // Available values for filter: Body parts, Muscles, Equipment\n    filter,\n    page,\n    limit,\n  };\n\n  return makeRequest('get', '/filters', { params });\n}\n\nexport function getExercises(filters, keyword, page = 1, limit = 10) {\n  const { bodypart, muscles, equipment } = filters;\n  const params = {\n    // Available values : back, cardio, chest, lower arms, lower legs, neck, shoulders, upper arms, upper legs, waist\n    bodypart,\n    // Available values : abductors, abs, adductors, biceps, calves, cardiovascular system, delts, forearms, glutes, hamstrings, lats, levator scapulae, pectorals, quads, serratus anterior, spine, traps, triceps, upper back\n    muscles,\n    // Available values : assisted, band, barbell, body weight, bosu ball, cable, dumbbell, elliptical machine, ez barbell, hammer, kettlebell, leverage machine, medicine ball, olympic barbell, resistance band, roller, rope, skierg machine, sled machine, smith machine, stability ball, stationary bike, stepmill machine, tire, trap bar, upper body ergometer, weighted, wheel roller\n    equipment,\n    keyword,\n    page,\n    limit,\n  };\n\n  return makeRequest('get', '/exercises', { params });\n}\n\nexport function getExercise(id) {\n  return makeRequest('get', `/exercises/${id}`);\n}\n\nexport async function postSubscription(email) {\n  const data = await makeRequest('post', '/subscription', { email });\n\n  if (data) {\n    showSuccessMessage('Exercise details fetched successfully.');\n  }\n  return data;\n}\n\nexport async function patchRating(id, rate, email, review) {\n  const data = await makeRequest('patch', `/exercises/${id}/rating`, {\n    rate,\n    email,\n    review,\n  });\n\n  if (data) {\n    showSuccessMessage('Thank you for your feedback.');\n  }\n\n  return data;\n}\n","import { getQuote } from './api.js';\n\nconst quoteElement = document.querySelector('.quote');\n\nexport async function renderQuote() {\n  const { author, quote } = await getQuote();\n  quoteElement.insertAdjacentHTML('beforeend',\n    `\n      <p>${quote}</p>\n      <p>${author}</p>\n    `\n  );\n}","import { toggleHideDOMElement } from './js/renders.js';\nimport { renderQuote } from './js/render-quote.js';\n\nconst testBtn = document.querySelector('.test-btn');\nconst loader = document.querySelector('.loader');\n\nif (testBtn && loader) {\n  testBtn.addEventListener('click', async (e) => {\n    toggleHideDOMElement(loader);\n  });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", renderQuote);"],"names":["toggleHideDOMElement","element","showMessage","message","isError","iziToast","showErrorMessage","axios","handleApiError","e","_b","_a","makeRequest","method","args","data","getQuote","quoteElement","renderQuote","author","quote","testBtn","loader"],"mappings":"svBAAO,SAASA,EAAqBC,EAAS,CAC5CA,EAAQ,UAAU,OAAO,iBAAiB,CAC5C,CCAA,SAASC,EAAYC,EAASC,EAAS,CACrCC,EAAS,KAAK,CACZ,KAAgB,iCAChB,UAAW,QACX,QAAAF,EACA,aAAc,QACd,SAAU,WACV,QAAS,IACT,MAAiB,UACjB,SAAU,OACd,CAAG,CACH,CAMO,SAASG,EAAiBH,EAAS,CACxCD,EAAYC,CAAa,CAC3B,CCjBAI,EAAM,SAAS,QAAU,uCAEzB,SAASC,EAAeC,EAAG,SACzBH,IACEI,GAAAC,EAAAF,EAAE,WAAF,YAAAE,EAAY,OAAZ,YAAAD,EAAkB,UAChB,sBAAsBD,EAAE,OAAO,2BACrC,CACA,CAEA,eAAeG,EAAYC,KAAWC,EAAM,CAC1C,GAAI,CACF,KAAM,CAAE,KAAAC,CAAI,EAAK,MAAMR,EAAMM,CAAM,EAAE,GAAGC,CAAI,EAC5C,OAAOC,CACR,OAAQN,EAAG,CACV,OAAAD,EAAeC,CAAC,EACT,IACR,CACH,CAEO,SAASO,GAAW,CACzB,OAAOJ,EAAY,MAAO,QAAQ,CACpC,CCvBA,MAAMK,EAAe,SAAS,cAAc,QAAQ,EAE7C,eAAeC,GAAc,CAClC,KAAM,CAAE,OAAAC,EAAQ,MAAAC,GAAU,MAAMJ,EAAQ,EACxCC,EAAa,mBAAmB,YAC9B;AAAA,WACOG,CAAK;AAAA,WACLD,CAAM;AAAA,KAEjB,CACA,CCTA,MAAME,EAAU,SAAS,cAAc,WAAW,EAC5CC,EAAS,SAAS,cAAc,SAAS,EAE3CD,GAAWC,GACbD,EAAQ,iBAAiB,QAAS,MAAOZ,GAAM,CAC7CT,EAAqBsB,CAAM,CAC/B,CAAG,EAGH,SAAS,iBAAiB,mBAAoBJ,CAAW"}