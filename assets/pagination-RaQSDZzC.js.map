{"version":3,"file":"pagination-RaQSDZzC.js","sources":["../../src/js/services/izitoast.js","../../src/js/constants.js","../../src/js/services/api.js","../../src/js/services/modal.js","../../src/js/services/header.js","../../src/img/icons.svg?url","../../src/js/utils/get-icon-path.js","../../src/js/renderers/exercise-card.js","../../src/js/services/storage.js","../../src/js/renderers/exercise-modal.js","../../src/js/handlers/exercise-card.js","../../src/js/renderers/exercises-list.js","../../src/js/renderers/pagination.js"],"sourcesContent":["import iziToast from 'izitoast';\n\nfunction showMessage(message, isError) {\n  iziToast.show({\n    icon: isError ? 'fa-solid fa-circle-exclamation' : 'fa-solid fa-check',\n    iconColor: 'white',\n    message,\n    messageColor: 'white',\n    position: 'topRight',\n    timeout: 5000,\n    color: isError ? '#EF4040' : '#00BFFF',\n    maxWidth: '500px',\n  });\n}\n\nexport function showSuccessMessage(message) {\n  showMessage(message, false);\n}\n\nexport function showErrorMessage(message) {\n  showMessage(message, true);\n}\n","export const EXERCISE_CARD_CLASS_NAME = 'exercise-card';\n\nexport const EXERCISES_PAGE_SIZE = 10;\n\nexport const EXERCISE_CARD_ACTIONS = Object.freeze({\n  START: 'start',\n  RATE: 'rate',\n  REMOVE_FAVORITE: 'removeFavorite',\n});\n\nexport const SECTION_EXERCISE_CONFIG = Object.freeze({\n  LIMITS: {\n    DESKTOP_LARGE: 12,\n    DESKTOP: 9,\n    EXERCISES_LIST: 10\n  },\n  BREAKPOINTS: {\n    DESKTOP_LARGE: 1440\n  },\n  DEFAULT_FILTER: 'Muscles'\n});","import axios from 'axios';\n\nimport { showErrorMessage, showSuccessMessage } from './izitoast.js';\nimport { EXERCISES_PAGE_SIZE } from '../constants.js';\n\naxios.defaults.baseURL = 'https://your-energy.b.goit.study/api';\n\nfunction handleApiError(e) {\n  showErrorMessage(\n    e.response?.data?.message ||\n      `An error occurred: ${e.message}, please try again later!`\n  );\n}\n\nasync function makeRequest(method, ...args) {\n  try {\n    const { data } = await axios[method](...args);\n    return data;\n  } catch (e) {\n    handleApiError(e);\n    return null;\n  }\n}\n\nexport function getQuote() {\n  return makeRequest('get', '/quote');\n}\n\nexport function getFilters(filter, page = 1, limit = 12) {\n  const params = {\n    // Available values for filter: Body parts, Muscles, Equipment\n    filter,\n    page,\n    limit,\n  };\n\n  return makeRequest('get', '/filters', { params });\n}\n\nexport function getExercises(\n  filters,\n  keyword,\n  page = 1,\n  limit = EXERCISES_PAGE_SIZE\n) {\n  const { bodypart, muscles, equipment } = filters;\n  const params = {\n    // Available values : back, cardio, chest, lower arms, lower legs, neck, shoulders, upper arms, upper legs, waist\n    bodypart,\n    // Available values : abductors, abs, adductors, biceps, calves, cardiovascular system, delts, forearms, glutes, hamstrings, lats, levator scapulae, pectorals, quads, serratus anterior, spine, traps, triceps, upper back\n    muscles,\n    // Available values : assisted, band, barbell, body weight, bosu ball, cable, dumbbell, elliptical machine, ez barbell, hammer, kettlebell, leverage machine, medicine ball, olympic barbell, resistance band, roller, rope, skierg machine, sled machine, smith machine, stability ball, stationary bike, stepmill machine, tire, trap bar, upper body ergometer, weighted, wheel roller\n    equipment,\n    keyword,\n    page,\n    limit,\n  };\n\n  return makeRequest('get', '/exercises', { params });\n}\n\nexport function getExercise(id) {\n  return makeRequest('get', `/exercises/${id}`);\n}\n\nexport async function postSubscription(email) {\n  const data = await makeRequest('post', '/subscription', { email });\n\n  if (data) {\n    showSuccessMessage(data?.message || 'Thank you for your subscription!');\n  }\n  return data;\n}\n\nexport async function patchRating(id, rate, email, review) {\n  const data = await makeRequest('patch', `/exercises/${id}/rating`, {\n    rate,\n    email,\n    review,\n  });\n\n  if (data) {\n    showSuccessMessage('Thank you for your feedback!');\n  }\n\n  return data;\n}\n","export async function toggleModal(state, modalMenu) {\n  if (state === 'open') {\n    const scrollbarWidth = getScrollbarWidth();\n\n    document.body.classList.add('modal-open');\n    modalMenu.classList.remove('hidden');\n    modalMenu.classList.add('is-open');\n\n    document.documentElement.style.setProperty(\"--scrollbar-width\", `${scrollbarWidth}px`);\n  }\n  if (state === 'close') {\n    modalMenu.classList.remove('is-open');\n\n    setTimeout(() => {\n      modalMenu.classList.add('hidden');\n      document.body.classList.remove('modal-open');\n      document.documentElement.style.removeProperty(\"--scrollbar-width\");\n    }, 250);\n  }\n}\n\nconst getScrollbarWidth = () => window.innerWidth - document.documentElement.clientWidth;","import { toggleModal } from './modal.js';\n\n\nexport function loadHeader() {\n  const modalMenu = document.querySelector('.mobile-menu-overlay');\n  const modalMenuOpenBtn = document.querySelector('.burger-btn');\n  const modalMenuCloseBtn = document.querySelector('.mobile-menu__close-button');\n\n  // Mobile menu\n  if (modalMenu && modalMenuOpenBtn && modalMenuCloseBtn) {\n    modalMenuOpenBtn.addEventListener('click', () => toggleModal('open', modalMenu));\n    modalMenuCloseBtn.addEventListener('click', () => toggleModal('close', modalMenu));\n\n    modalMenu.addEventListener('click', ({ target }) => {\n      if (target.classList.contains('mobile-menu__nav-link') || target === modalMenu) {\n        toggleModal('close', modalMenu);\n      }\n    });\n  }\n\n  const navLinks = document.querySelectorAll('.nav-link');\n  let currentPath = window.location.pathname;\n\n  if (currentPath.endsWith('/') || currentPath.endsWith('/index.html')) {\n    currentPath = '/index.html';\n  }\n\n  navLinks.forEach(link => {\n    let linkPath = new URL(link.href).pathname;\n\n    if (linkPath.endsWith('/') || linkPath.endsWith('/index.html')) {\n      linkPath = '/index.html';\n    }\n\n    if (linkPath === currentPath) {\n      link.classList.add('active');\n    } else {\n      link.classList.remove('active');\n    }\n  });\n}","export default \"__VITE_ASSET__DM6NMRag__\"","import spritePath from '../../img/icons.svg?url';\n\nexport function getIconPath(name) {\n  return `${spritePath}#${name}`;\n}\n","import { EXERCISE_CARD_ACTIONS, EXERCISE_CARD_CLASS_NAME } from '../constants';\nimport { getIconPath } from '../utils/get-icon-path';\n\nexport function renderExerciseCard(exercise, isFavorite) {\n  return `\n    <div class=\"${EXERCISE_CARD_CLASS_NAME}\" data-id=\"${exercise._id}\">\n      <div class=\"exercise-card-header\">\n      <p class=\"exercise-equipment\">${exercise.equipment}</p>\n        <div class=\"exercise-card-header-middle\">\n          ${\n            isFavorite\n              ? `<button data-action=\"${\n                  EXERCISE_CARD_ACTIONS.REMOVE_FAVORITE\n                }\" class=\"card-icon-button remove-favorite-button\">\n                  <svg class=\"remove-favorite-icon\">\n                    <use href=\"${getIconPath('trash-icon')}\"></use>\n                  </svg>\n                </button>`\n              : `<button data-action=\"${\n                  EXERCISE_CARD_ACTIONS.RATE\n                }\" class=\"card-icon-button rating-button\">\n                  ${exercise.rating.toFixed(1)}\n                  <svg class=\"rating-icon\">\n                    <use href=\"${getIconPath('star-filled-icon')}\"></use>\n                  </svg>\n                </button>`\n          }\n        </div>\n        <button data-action=\"${\n          EXERCISE_CARD_ACTIONS.START\n        }\" class=\"start-button\">\n          Start\n          <svg class=\"arrow-icon\" width=\"13\" height=\"13\">\n            <use href=\"${getIconPath('arrow-icon')}\"></use>\n          </svg>\n        </button>\n      </div>\n      <div class=\"exercise-card-body\">\n        <div class=\"exercise-name-container\">\n          <svg class=\"exercise-icon\" width=\"24\" height=\"24\">\n            <use href=\"${getIconPath('running-man-icon')}\"></use>\n          </svg>\n          <h3 class=\"exercise-name\">${exercise.name}</h3>\n        </div>\n      </div>\n      <div class=\"exercise-card-footer\">\n        <p class=\"card-footer-text\">\n          <span class=\"secondary-text\">Burned calories:</span>\n          ${exercise.burnedCalories} / ${exercise.time} min\n        </p>\n        <p class=\"card-footer-text\">\n          <span class=\"secondary-text\">Body part:</span>\n          ${exercise.bodyPart}\n        </p>\n        <p class=\"card-footer-text\">\n          <span class=\"secondary-text\">Target:</span>\n          ${exercise.target}\n        </p>\n      </div>\n    </div>\n  `;\n}\nexport function removeExerciseCard(container, exerciseId) {\n  const exerciseCard = container.querySelector(\n    `.${EXERCISE_CARD_CLASS_NAME}[data-id=\"${exerciseId}\"]`\n  );\n  if (exerciseCard) {\n    exerciseCard.remove();\n  }\n}\n","const LOCAL_STORAGE_KEY = 'favoriteExercises';\n\n/**\n * Exercise example:\n * \"_id\": \"64f389465ae26083f39b17a5\",\n    \"bodyPart\": \"waist\",\n    \"equipment\": \"body weight\",\n    \"gifUrl\": \"https://ftp.goit.study/img/power-pulse/gifs/0006.gif\",\n    \"name\": \"alternate heel touchers\",\n    \"target\": \"abs\",\n    \"description\": \"This refers to your core muscles, which include the rectus abdominis, obliques, and transverse abdominis. They're essential for maintaining posture, stability, and generating force in many movements. Exercises that target the abs include crunches, leg raises, and planks.\",\n    \"rating\": 3,\n    \"burnedCalories\": 116,\n    \"time\": 3,\n    \"popularity\": 1\n */\n\nexport function storeExercise(exercise) {\n  const exercises = getStoredExercises();\n\n  if (exercises.some(e => e._id === exercise._id)) {\n    return;\n  }\n  exercises.push(exercise);\n\n  storeExercises(exercises);\n}\n\nexport function removeStoredExercise(exerciseId) {\n  const exercises = getStoredExercises();\n\n  const updatedExercises = exercises.filter(e => e._id !== exerciseId);\n\n  storeExercises(updatedExercises);\n}\n\nfunction storeExercises(exercises) {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(exercises));\n}\n\nexport function getStoredExercises() {\n  try {\n    const storedData = localStorage.getItem(LOCAL_STORAGE_KEY);\n\n    if (storedData) {\n      const parsedExercises = JSON.parse(storedData);\n\n      if (Array.isArray(parsedExercises)) {\n        return parsedExercises.filter(validateExercise);\n      }\n    }\n  } catch (error) {\n    // no need to handle error here, just return an empty array\n  }\n  return [];\n}\n\nfunction validateExercise(exercise) {\n  return (\n    exercise &&\n    typeof exercise === 'object' &&\n    typeof exercise._id === 'string' &&\n    typeof exercise.name === 'string'\n  );\n}\n","import {\n  storeExercise,\n  removeStoredExercise,\n  getStoredExercises,\n} from '../services/storage';\nimport { getIconPath } from '../utils/get-icon-path';\n\nconst getScrollbarWidth = () =>\n  window.innerWidth - document.documentElement.clientWidth;\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nfunction renderStars(rating) {\n  const full = Math.floor(rating);\n  let result = '';\n\n  for (let i = 0; i < 5; i++) {\n    let icon = i < full ? 'star-filled-icon' : 'star-icon';\n    result += `\n      <svg class=\"exercise-modal__star-icon\">\n        <use href=\"${getIconPath(icon)}\"></use>\n      </svg>\n    `;\n  }\n\n  return result;\n}\n\nfunction renderFavBtn(exercise) {\n  const isStored = getStoredExercises().some(e => e._id === exercise._id);\n\n  return `\n    <button\n      type=\"button\"\n      class=\"exercise-modal__fav-btn\"\n      data-action=\"${isStored ? 'remove' : 'add'}\"\n    >\n      ${isStored ? 'Remove from favorites' : 'Add to favorites'}\n      <svg class=\"exercise-modal__fav-icon\" width=\"18\" height=\"18\">\n        <use href=\"${\n          isStored\n            ? `${getIconPath('trash-icon')}`\n            : `${getIconPath('heart-icon')}`\n        }\"></use>\n      </svg>\n    </button>\n  `;\n}\n\nexport function createExerciseModal(data) {\n  const modalHtml = `\n    <div id=\"exerciseModalBackdrop\" class=\"exercise-modal__backdrop\">\n      <div class=\"exercise-modal\">\n        <button class=\"exercise-modal__close-btn\" type=\"button\">\n          <svg class=\"exercise-modal__close-icon\">\n            <use href=\"${getIconPath('close-icon')}\"></use>\n          </svg>\n        </button>\n\n        <div class=\"exercise-modal__content\">\n      <div class=\"exercise-modal__image-wrapper\">\n          <img src=\"${data.gifUrl}\" alt=\"${\n    data.name\n  }\"class=\"exercise-modal__image\" />\n        </div>\n        <div class=\"exercise-modal__info-wrapper\">\n          <div class=\"exercise-modal__title-block\">\n            <h2 class=\"exercise-modal__name\">${capitalize(data.name)}</h2>\n            <div class=\"exercise-modal__rating\">\n              <span class=\"exercise-modal__rating-value\">${data.rating}</span>\n              <div class=\"exercise-modal__stars\">\n                ${renderStars(data.rating)}\n              </div>\n            </div>\n          </div>\n          <ul class=\"exercise-modal__info-list\">\n            <li class=\"exercise-modal__info-item\"><p class=\"exercise-modal__label\">Target</p><p class=\"exercise-modal__value\">${capitalize(\n    data.target\n  )}</p></li>\n            <li class=\"exercise-modal__info-item\"><p class=\"exercise-modal__label\">Body Part</p><p class=\"exercise-modal__value\">${capitalize(\n    data.bodyPart\n  )}</p></li>\n            <li class=\"exercise-modal__info-item\"><p class=\"exercise-modal__label\">Equipment</p><p class=\"exercise-modal__value\">${capitalize(\n    data.equipment\n  )}</p></li>\n            <li class=\"exercise-modal__info-item\"><p class=\"exercise-modal__label\">Popular</p><p class=\"exercise-modal__value\">${\n    data.popularity\n  }</p></li>\n            <li class=\"exercise-modal__info-item\"><p class=\"exercise-modal__label\">Burned calories</p><p class=\"exercise-modal__value\">${\n    data.burnedCalories\n  }/${data.time} min</p></li>\n          </ul>\n          <p class=\"exercise-modal__description\">${data.description}</p>\n        </div>\n        </div>\n\n        <div class=\"exercise-modal__buttons\">\n            ${renderFavBtn(data)}\n            <button type=\"button\" class=\"exercise-modal__rating-btn\">Give a rating</button>\n        </div>\n      </div>\n    </div>\n  `;\n\n  document.querySelector('#exerciseModalBackdrop')?.remove();\n\n  document.body.insertAdjacentHTML('beforeend', modalHtml);\n\n  const backdrop = document.getElementById('exerciseModalBackdrop');\n  const scrollbarWidth = getScrollbarWidth();\n\n  document.body.classList.add('modal-open');\n  document.documentElement.style.setProperty(\n    '--scrollbar-width',\n    `${scrollbarWidth}px`\n  );\n\n  setTimeout(() => {\n    backdrop.classList.add('is-open');\n  }, 50);\n\n  const closeModal = () => {\n    backdrop.classList.remove('is-open');\n    setTimeout(() => {\n      document.body.classList.remove('modal-open');\n      document.documentElement.style.removeProperty('--scrollbar-width');\n      backdrop.remove();\n    }, 300);\n    document.removeEventListener('keydown', escHandler);\n  };\n\n  backdrop\n    .querySelector('.exercise-modal__close-btn')\n    .addEventListener('click', closeModal);\n\n  backdrop.addEventListener('click', e => {\n    if (e.target === backdrop) closeModal();\n  });\n\n  function escHandler(e) {\n    if (e.key === 'Escape') closeModal();\n  }\n  document.addEventListener('keydown', escHandler);\n\n  backdrop\n    .querySelector('.exercise-modal__buttons')\n    .addEventListener('click', e => {\n      const btn = e.target.closest('[data-action]');\n      if (!btn) return;\n\n      const action = btn.dataset.action;\n      if (action === 'add') {\n        storeExercise(data);\n      } else if (action === 'remove') {\n        removeStoredExercise(data._id);\n      }\n\n      btn.outerHTML = renderFavBtn(data);\n    });\n}\n","import { removeExerciseCard } from '../renderers/exercise-card';\nimport { removeStoredExercise } from '../services/storage';\nimport { getExercise } from '../services/api';\nimport { createExerciseModal } from '../renderers/exercise-modal';\n\nexport function handleRemoveFavorite(listEl, exerciseId) {\n  removeStoredExercise(exerciseId);\n  removeExerciseCard(listEl, exerciseId);\n}\n\nexport function handleRate(exerciseId) {\n  // TODO: to implement\n  console.log(`Rating exercise: ${exerciseId}`);\n}\n\nexport async function handleStart(exerciseId) {\n  const data = await getExercise(exerciseId);\n  createExerciseModal(data);\n}\n","import { EXERCISE_CARD_ACTIONS, EXERCISE_CARD_CLASS_NAME } from '../constants';\nimport {\n  handleRate,\n  handleRemoveFavorite,\n  handleStart,\n} from '../handlers/exercise-card';\nimport { renderExerciseCard } from './exercise-card';\n\nconst listEl = document.querySelector('.exercises-list-wrapper');\n\nexport function renderExercisesList(\n  exercises,\n  emptyMessage,\n  { favorites, onFavoriteDelete } = {}\n) {\n  listEl.innerHTML = ''; // Clear the list before rendering\n\n  if (favorites) {\n    listEl.classList.add('favorites');\n  }\n\n  let content = '';\n\n  if (!exercises.length) {\n    content = `<p class=\"no-exercises-message\">${emptyMessage}</p>`;\n  } else {\n    exercises.forEach(exercise => {\n      content += renderExerciseCard(exercise, favorites);\n    });\n  }\n\n  listEl.insertAdjacentHTML('beforeend', content);\n\n  listEl.onclick = e => {\n    let target = e.target;\n\n    if (target.nodeName !== 'BUTTON') {\n      target = target.closest(`.${EXERCISE_CARD_CLASS_NAME} button`);\n    }\n    if (!target || target.nodeName !== 'BUTTON') {\n      return;\n    }\n\n    const exerciseCard = target.closest(`.${EXERCISE_CARD_CLASS_NAME}`);\n    const exerciseId = exerciseCard.dataset.id;\n    const action = target.dataset.action;\n\n    switch (action) {\n      case EXERCISE_CARD_ACTIONS.REMOVE_FAVORITE:\n        handleRemoveFavorite(listEl, exerciseId);\n        onFavoriteDelete?.(exerciseId);\n        break;\n\n      case EXERCISE_CARD_ACTIONS.START:\n        handleStart(exerciseId);\n        break;\n\n      case EXERCISE_CARD_ACTIONS.RATE:\n        handleRate(exerciseId);\n        break;\n\n      default:\n        console.warn('Unknown action:', action);\n    }\n  };\n}\n","import { getIconPath } from '../utils/get-icon-path';\n\nconst MAX_PAGES = 3;\n\nfunction renderEllipsis() {\n  return `<span class=\"pagination-ellipsis\">...</span>`;\n}\n\nfunction renderPageButton(page, currentPage) {\n  return `<button class=\"page-button ${\n    page === currentPage ? 'active' : ''\n  }\" data-page=\"${page}\">${page}</button>`;\n}\n\nfunction renderArrowButton(direction, double, page, disabled) {\n  return `<button class=\"page-button arrow ${\n    disabled ? 'disabled' : ''\n  }\" data-page=\"${page}\">\n    <svg class=\"pagination-arrow-icon ${double ? 'double' : ''}\">\n      <use href=\"${getIconPath(\n        `pagination-arrow${double ? '-double' : ''}-${direction}-icon`\n      )}\"></use>\n    </svg>\n  </button>`;\n}\n\nexport function renderPagination(currentPage, totalPages, onPageChange, contentBlock = '.exercises-list') {\n  let paginationContainer = document.querySelector('.pagination');\n\n  if (!paginationContainer) {\n    paginationContainer = document.createElement('div');\n    paginationContainer.className = 'pagination';\n    document.querySelector(contentBlock).appendChild(paginationContainer);\n  } else {\n    paginationContainer.innerHTML = ''; // Clear previous pagination\n  }\n\n  let paginationHTML = '';\n\n  const startPage = Math.max(1, currentPage - Math.floor(MAX_PAGES / 2));\n  const endPage = Math.min(totalPages, startPage + MAX_PAGES - 1);\n  const adjustedStartPage = Math.max(1, endPage - MAX_PAGES + 1);\n\n  const exceedsMaxPages = totalPages > MAX_PAGES;\n\n  if (exceedsMaxPages) {\n    const prevDisabled = currentPage === 1;\n\n    paginationHTML += `\n      <div class=\"arrow-buttons\">\n        ${renderArrowButton('left', true, 1, prevDisabled)}\n        ${renderArrowButton('left', false, currentPage - 1, prevDisabled)}\n      </div>\n    `;\n  }\n\n  let pageButtonsHTML = '';\n  for (let page = adjustedStartPage; page <= endPage; page += 1) {\n    pageButtonsHTML += renderPageButton(page, currentPage);\n  }\n\n  const shouldAddStartEllipsis = adjustedStartPage > 1;\n  const shouldAddEndEllipsis = endPage < totalPages;\n\n  if (shouldAddStartEllipsis) {\n    pageButtonsHTML = `${renderEllipsis()}${pageButtonsHTML}`;\n  }\n  if (shouldAddEndEllipsis) {\n    pageButtonsHTML += renderEllipsis();\n  }\n\n  paginationHTML += `<div class=\"page-buttons\">${pageButtonsHTML}</div>`;\n\n  if (exceedsMaxPages) {\n    const nextDisabled = currentPage === totalPages;\n\n    paginationHTML += `\n      <div class=\"arrow-buttons\">\n        ${renderArrowButton('right', false, currentPage + 1, nextDisabled)}\n        ${renderArrowButton('right', true, totalPages, nextDisabled)}\n      </div>\n    `;\n  }\n\n  paginationContainer.insertAdjacentHTML('beforeend', paginationHTML);\n\n  paginationContainer.onclick = e => {\n    const target =\n      e.target.nodeName === 'BUTTON'\n        ? e.target\n        : e.target.closest('.pagination button');\n\n    if (target) {\n      const page = parseInt(target.dataset.page, 10);\n\n      if (page !== currentPage) {\n        onPageChange(page);\n      }\n    }\n  };\n}\n"],"names":["showMessage","message","isError","iziToast","showSuccessMessage","showErrorMessage","EXERCISE_CARD_CLASS_NAME","EXERCISES_PAGE_SIZE","EXERCISE_CARD_ACTIONS","SECTION_EXERCISE_CONFIG","axios","handleApiError","makeRequest","method","args","data","e","getQuote","getFilters","filter","page","limit","getExercises","filters","keyword","bodypart","muscles","equipment","getExercise","id","postSubscription","email","toggleModal","state","modalMenu","scrollbarWidth","getScrollbarWidth","loadHeader","modalMenuOpenBtn","modalMenuCloseBtn","target","navLinks","currentPath","link","linkPath","spritePath","getIconPath","name","renderExerciseCard","exercise","isFavorite","removeExerciseCard","container","exerciseId","exerciseCard","LOCAL_STORAGE_KEY","storeExercise","exercises","getStoredExercises","storeExercises","removeStoredExercise","updatedExercises","storedData","parsedExercises","validateExercise","capitalize","str","renderStars","rating","full","result","i","icon","renderFavBtn","isStored","createExerciseModal","modalHtml","backdrop","closeModal","escHandler","btn","action","handleRemoveFavorite","listEl","handleRate","handleStart","renderExercisesList","emptyMessage","favorites","onFavoriteDelete","content","MAX_PAGES","renderEllipsis","renderPageButton","currentPage","renderArrowButton","direction","double","disabled","renderPagination","totalPages","onPageChange","contentBlock","paginationContainer","paginationHTML","startPage","endPage","adjustedStartPage","exceedsMaxPages","prevDisabled","pageButtonsHTML","shouldAddStartEllipsis","shouldAddEndEllipsis","nextDisabled"],"mappings":"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"}